#BlueJ class context
comment0.target=ProgrammeCalculette
comment0.text=\r\n\ D\u00E9crivez\ votre\ classe\ ProgrammeCalculette\ ici.\r\n\r\n\ @author\ (votre\ nom)\r\n\ @version\ (un\ num\u00E9ro\ de\ version\ ou\ une\ date)\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=s
comment10.target=boolean\ estInt(java.lang.String)
comment11.params=EPF
comment11.target=int\ chercherOperandes(java.lang.String)
comment2.params=
comment2.target=Pile\ creerPile()
comment2.text=\r\n\ Creer\ une\ nouvelle\ pile\ vide\r\n\ \r\n\ @return\ Pile\:\ la\ pile\ vide\r\n
comment3.params=pfP
comment3.target=boolean\ estVide(Pile)
comment3.text=\r\n\ Renvoie\ True\ si\ la\ pile\ est\ vide\ et\ False\ si\ elle\ ne\ l'est\ pas\r\n\ @param\ pfP\ IN\ \:\ Pile\r\n\ \r\n\ @return\ boolean\ \r\n
comment4.params=pfP
comment4.target=boolean\ pilePlein(Pile)
comment4.text=\r\n\ Renvoie\ True\ si\ la\ pile\ est\ pleine\ et\ False\ si\ elle\ ne\ l'est\ pas\r\n\ \r\n\ @param\ pfP\ IN\ \:\ Pile\ a\ tester\r\n\ @return\ boolean\r\n
comment5.params=pfP\ pfVal
comment5.target=void\ empiler(Pile,\ int)
comment5.text=\r\n\ Ajoute\ un\ \u00E9l\u00E9ment\ dans\ la\ pile\r\n\ \r\n\ @param\ pfP\ IN/OUT\ \:\ Pile\ a\ modifi\u00E9\r\n\ @param\ pfVal\ IN\ \:\ Valeur\ a\ ajouter\r\n
comment6.params=pfP
comment6.target=void\ depiler(Pile)
comment6.text=\r\n\ Enleve\ un\ \u00E9l\u00E9ment\ de\ la\ pile\r\n\ \r\n\ @param\ pfP\ IN/OUT\ \:\ Pile\ a\ modifier\r\n\ @throw\ Exception\ si\ estVide(pfP)\ est\ vraie\r\n
comment7.params=pfP
comment7.target=int\ sommet(Pile)
comment7.text=\r\n\ Renvoie\ le\ dernier\ \u00E9l\u00E9ment\ de\ la\ pile\r\n\ \r\n\ @param\ pfP\ IN\ \:\ Pile\r\n\ @return\ String\ dernier\ element\ de\ la\ pile\r\n\ @throw\ Exception\ Si\ estVide(pfP)\ est\ vrai\r\n
comment8.params=pfP
comment8.target=java.lang.String\ toString(Pile)
comment8.text=\r\n\ retourne\ l'etat\ de\ la\ pile\ sous\ la\ forme\ de\ chaine\ de\ caractere\r\n\ \r\n\ @param\ pfP\ IN\ \:\ Pile\ a\ tester\r\n\ @return\ String\ \:\ Etat\ de\ la\ pile\r\n
comment9.params=pfP
comment9.target=int\ nbElements(Pile)
comment9.text=\r\n\ retourne\ le\ nombre\ d'elements\ courants\ de\ la\ pile\r\n\ \r\n\ @param\ pfP\ IN\ \:\ Pile\ a\ tester\r\n\ @return\ int\ \:\ nombre\ d'elements\r\n
numComments=12
